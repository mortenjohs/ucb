}
files <- list.files("archive/good")
good_errors <- c()
for (file in files) {
print(file)
good_planes <- read_csv(paste0("archive/good/",file)) %>%
filter(!is.na(acList.Lat)) %>%
select(17,29,8,26,39,27,33,20,21,1,35,19,24)
names(good_planes) <- c("adshex","reg","country","operator","type","postime","squawk","latitude","longitude","altitude","track","interesting","military")
good_planes <- good_planes %>%
filter(country=="United States" | country=="Canada")
unique_planes <- unique(good_planes$adshex)
n=1
for (plane in unique_planes) {
tmp <- good_planes %>%
filter(adshex==plane) %>%
unique() %>%
mutate(timestamp=as.POSIXct(postime/1000, origin="1970-01-01"))
tmp$reg <- gsub("/","-",tmp$reg)
possibleError <- tryCatch({
write_csv(tmp, paste0("indiv_planes2/",plane,"_",tmp$reg[1],"_",tmp$operator[1],"_",tmp$country[1],".csv"), na="", append = TRUE)
print(paste0(file," ",plane," ",n," of ",length(unique_planes)))
n=n+1
}, warning = function(w) {
}, error = function(e) {
good_errors[[length(good_errors)+1]] <- plane
})
}
}
setwd("/Volumes/Working/adsb")
library(readr)
library(dplyr)
library(rgdal)
library(rgeos)
library(kwgeo)
obs_planes <- list.files("indiv_planes2")
faa <- read_csv("AR072016/MASTER.txt") %>%
select(1:34)
fields <- c("n_number","serial_number","mfr_mdl_code","eng_mfr_mdl","year_mfr","type_registrant","name","street","street2","city","state","zip_code","region","county","country","last_action_date","cert_issue_date","certification","type_aircraft","type_engine","status_code","mode_s_code","fract_owner","air_worth_date","other_names(1)","other_names(2)","other_names(3)","other_names(4)","other_names(5)","expiration_date","unique_id","kit_mfr","kit_model","adshex")
names(faa) <- fields
faa <- faa %>%
mutate(n_number2=paste0("N",n_number))
# all government planes (will include state and local law enforcement)
gov <- faa %>%
filter(type_registrant == 5) %>%
mutate(agency=name)
# specific candidates
candidates1 <- faa %>%
filter(grepl("AIR CERBERUS INC|AIRCRAFT LOGISTICS GROUP|ARROWDATA|AVIATION SPECIALTIES INC|FIVE POINT AERIAL|AEROPTIC|645TH|GENERAL ATOMICS|GLOBAL GEO|KISFALUDY|MIDWEST AERIAL|JA AERO|NORTHROP GRUMMAN|SIERRA NEVADA|STRAIGHT FLIGHT|SRT AVIATION|SUNSHINE AERO|TENAX|TWIN OTTER|AIRMOBILE|DOUBLE D INDUSTRIAL|APEX AERONAUTICAL|COMMUTER AIR TECHNOLOGY|VALAIR AVIATION|MISSION TRANSPORTATION|SINGLEPOINT|MCNUTT ROSS|MCNUTT STACY|DEVON HOLDING & LEASING|PRESCOTT SUPPORT|PRESIDENTIAL AVIATION|STEVENS EXPRESS|CLAY LACY|CRYSTAL JET AVIATION|GEMINI LEASING|LOWA LTD|MIAMI AIR INTERNATIONAL|RICHMOR AVIATION|TEPPER AVIATION|UNITED STATES AVIATION CO|WORLDWIDE JET CHARTER|ASHLY AIRE|CORPORATE LIFT", name))
candidates2 <- faa %>%
filter(n_number=="60125" | n_number=="325BC")
candidates <- bind_rows(candidates1,candidates2) %>%
mutate(agency=name)
rm(candidates1,candidates2)
# marshals
marshals <- faa %>%
filter(grepl("EARLY DETECTION ALARM",name)) %>%
mutate(agency = "marshals")
# dynamic
dynamic <- faa %>%
filter(grepl("DYNAMIC", name) & city=="BRIDGEWATER") %>%
mutate(agency = "dynamic")
# fbi
fbi1 <- faa %>%
filter(city=="BRISTOW" & state =="VA" & grepl("PO BOX", street)) %>%
mutate(eng_mfr_mdl=as.character(eng_mfr_mdl))
fbi2 <- faa %>%
filter(grepl("NATIONAL AIRCRAFT LEASING|AIRCRAFT ASSOCIATES|NORTHEAST AIRCRAFT LEASING|NORTHWEST AIRCRAFT LEASING|SOUTHEAST AIRCRAFT LEASING|SOUTHWEST AIRCRAFT LEASING|WORLDWIDE AIRCRAFT LEASING",name)) %>%
filter(!grepl("LLC|FAIRFAX", name)) %>%
mutate(eng_mfr_mdl=as.character(eng_mfr_mdl))
enigma <- read_csv("enigma2.csv") %>%
rename(adshex=mode_s_code_hex) %>%
select(adshex)
fbi3 <-  semi_join(faa,enigma) %>%
mutate(eng_mfr_mdl=as.character(eng_mfr_mdl))
# using wiseman's list
wiseman <- read_csv("wiseman.csv") %>%
select(ICAO) %>%
rename(adshex=ICAO)
fbi4 <- semi_join(faa,wiseman) %>%
mutate(eng_mfr_mdl=as.character(eng_mfr_mdl))
fbi <- bind_rows(fbi1,fbi2,fbi3,fbi4) %>%
unique() %>%
mutate(agency="fbi")
rm(enigma,wiseman,fbi1,fbi2,fbi3,fbi4)
# dea
dea1 <- gov %>%
filter(grepl("DRUG ENFORCEMENT ADMIN", name))
# from charles's companies
dea2 <- faa %>%
filter(grepl("CHAPARRAL AIR|JACOBS AVIATION|LINDSEY AVIATION|SILVER CREEK AVIATION", name))
# from known addresses of DEA aviation
dea3 <- faa %>%
filter(grepl("2300 HORIZON|2711 WRIGHT|10318 DORBANDT|PO BOX 92799", street))
# now searching the addresses for Charles's DEA fronts, above
dea4 <- faa %>%
filter(grepl("4360 WESTERN CENTER BLVD # 218|2300 REDONDO BLVD #90482|1097 SCHOOLHOUSE RD # 241|1527 W STATE HIGHWAY 114 # 131|2373 NE 30TH CT|704 WARD AVE NE", street)) %>%
anti_join(dea2)
dea <- bind_rows(dea1,dea2,dea3,dea4) %>%
unique() %>%
mutate(agency="dea")
rm(dea1,dea2,dea3,dea4)
# unknowns
mysteries <- data_frame(c("A6666D","A1F6DC","ADF7A5","A13098"))
names(mysteries) <- "adshex"
# all
all <- bind_rows(gov,fbi,dea,marshals,candidates,marshals,dynamic,mysteries) %>%
unique()
# state/local law enforcement
law_enforc <- gov %>%
filter(grepl("POLIC|SHERIFF|LAW ENFO|PUBLIC SAFETY|JUDICIAL|PATROL|NARCOTIC|PUBLIC SAFETY|TROOP", name)) %>%
filter(!grepl("POLICY|CIVIL AIR", name)) %>%
mutate(agency = "state/local")
# possible state/local law enforcement
poss_law_enforc <- gov %>%
filter(!grepl("POLIC|SHERIFF|LAW ENFO|PUBLIC SAFETY|JUDICIAL|PATROL|NARCOTIC|PUBLIC SAFETY|TROOP|FIRE|AIRPORT|HOSPITAL|CIVIL|MOSQUITO|SCHOOL|EDUCATION|VOCATIONAL|LEVEE|HEALTH|PUBLIC WORKS|TREE|FINAN|ECONOMIC|IRRIGATION|COLLEGE|WATER|ENVIRON|DEVELOPMENT|UNIVERSITY|ATTORNEY", name)) %>%
filter(grepl("CITY|COUNTY", name)) %>%
mutate(agency = "poss state/local")
# atf
atf <- gov %>%
filter(grepl("BUREAU OF ALCOHOL", name)) %>%
mutate(agency="atf")
# dhs
dhs <- gov %>%
filter(grepl("HOMELAND|CUSTOMS|BORDER", name)) %>%
filter(!grepl("TENNESSEE", name)) %>%
mutate(agency="dhs")
# get candidates from indiv_planes2
conventions2 <- c()
n <- 0
h <- 0
for (p in all$adshex) {
print(p)
n <- n+1
for (o in obs_planes) {
if (grepl(p, o)) {
h <- h+1
tmp <- read_csv(paste0("indiv_planes2/",o), col_names = F)
names(tmp) <- c("adshex","reg","country","operator","type","unix_timestamp","squawk","latitude","longitude","altitude","heading","military","interesting","timestamp")
tmp <- tmp %>%
mutate(squawk=as.character(squawk),
type=as.character(type),
unix_timestamp=as.numeric(unix_timestamp),
latitude=as.numeric(latitude),
longitude=as.numeric(longitude),
altitude=as.integer(altitude),
heading=as.numeric(heading),
military=as.logical(military),
interesting=as.logical(interesting),
timestamp=as.POSIXct(timestamp))
conventions2[[length(conventions2)+1]] <- tmp
}
}
print(paste0(n," of ",length(all$adshex)," with ",h, " hits"))
}
conventions2 <- bind_rows(conventions2)
hrs <- function(x) {
y <- x * 3600
return(y)
}
conventions2 <- conventions2 %>%
mutate(loc_timestamp = timestamp + hrs(-4),
loc_date = as.Date(loc_timestamp)) %>%
# select(1:14,loc_timestamp,loc_date) %>%
arrange(adshex,timestamp)
conventions2 <- as.data.frame(conventions2)
xy <- conventions2[,c(9,8)]
conventions2_map <- SpatialPointsDataFrame(coords = xy, data = conventions2, proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
rnc <- raster::extent(-82.5,-81,41,42)
rnc2_map <- raster::crop(conventions2_map, rnc)
rnc2_df <- as.data.frame(rnc2_map)
rnc2_df <- as.data.frame(rnc2_map) %>%
left_join(faa, by="adshex") %>%
select(1:16, name)
rnc_join <- read_csv("rnc_join.csv")
rnc2_df <- rnc2_df %>%
left_join(rnc_join)
cartodb_id <- "peter-aldhous"
cartodb_api <- "4e0413e60d653cdd010fbfd6a3f233e50099bbd1"
r2cartodb(rnc2_df, "rnc_final_adsb", cartodb_id, cartodb_api)
rnc2_df_live <- rnc2_df %>%
filter(loc_date >= "2015-07-18" & loc_date <= "2015-07-21")
rnc2_df_live <- rnc2_df %>%
filter(loc_date >= "2015-07-18")
rnc2_df_live <- rnc2_df %>%
filter(loc_date >= "2016-07-18" & loc_date <= "2016-07-21")
rnc_df_live_sum <- rnc2_df_live %>%
group_by(reg,name) %>%
summarise(obs=n())
View(rnc_df_live_sum)
test1 <- read_csv("indiv_planes2/A996CB_N717HP_OHIO DEPARTMENT OF PUBLIC SAFETY OHIO STATE HIGHWAY PATROL    - COLUMBUS, OH_United States.csv")
View(test1)
setwd("/Volumes/Working/adsb")
locs <- c("points","new_lines")
# make a GIF with ImageMagick
for (loc in locs) {
system(paste0("convert -delay 100 ",loc,"/*.jpg ",loc,".gif"))
}
save.image("/Volumes/Working/adsb/adsb_conventions_final.RData")
View(dnc_df_live_sum)
install.packages("Lahman")
library(Lahman)
View(Salaries)
load("/Users/peteraldhous/Dropbox/berkeley/intro_data/unem/unem.RData")
library(readr)
library(dplyr)
library(ggplot2)
ggplot(unem_rates, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal() %>%
+ ggtitle("What is the true unemployment rate?") %>%
+ theme(legend.title = element_blank()) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ geom_line() %>%
+ xlab("") + ylab("Rate (%)")
ggplot(unem_sex, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal() %>%
+ ggtitle("Unemployment rate by gender") %>%
+ theme(legend.title = element_blank()) %>%
+ scale_y_continuous(limits = c(0,13)) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ geom_line() %>%
+ xlab("") + ylab("Unemployment rate (%)")
ggplot(unem_race, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal() %>%
+ ggtitle("Unemployment rate by race/ethnicity") %>%
+ scale_y_continuous(limits = c(0,22)) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ theme(legend.title = element_blank()) %>%
+ geom_line() %>%
+ xlab("") + ylab("Unemployment rate (%)")
ggplot(unem_age, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal() %>%
+ ggtitle("Unemployment rate by age") %>%
+ scale_y_continuous(limits = c(0,30)) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ theme(legend.title = element_blank()) %>%
+ geom_line() %>%
+ xlab("") + ylab("Unemployment rate (%)")
ggplot(unem_age, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal() %>%
+ theme(text_element(fontsize=32)) %>%
+ ggtitle("Unemployment rate by age") %>%
+ scale_y_continuous(limits = c(0,30)) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ theme(legend.title = element_blank()) %>%
+ geom_line() %>%
+ xlab("") + ylab("Unemployment rate (%)")
ggplot(unem_age, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal() %>%
+ theme(element_text(fontsize=32)) %>%
+ ggtitle("Unemployment rate by age") %>%
+ scale_y_continuous(limits = c(0,30)) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ theme(legend.title = element_blank()) %>%
+ geom_line() %>%
+ xlab("") + ylab("Unemployment rate (%)")
ggplot(unem_age, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal(base_size = 32) %>%
# + theme(element_text(fontsize=32)) %>%
+ ggtitle("Unemployment rate by age") %>%
+ scale_y_continuous(limits = c(0,30)) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ theme(legend.title = element_blank()) %>%
+ geom_line() %>%
+ xlab("") + ylab("Unemployment rate (%)")
ggplot(unem_age, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal(base_size = 16) %>%
# + theme(element_text(fontsize=32)) %>%
+ ggtitle("Unemployment rate by age") %>%
+ scale_y_continuous(limits = c(0,30)) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ theme(legend.title = element_blank()) %>%
+ geom_line() %>%
+ xlab("") + ylab("Unemployment rate (%)")
ggplot(unem_age, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal(base_size = 18) %>%
# + theme(element_text(fontsize=32)) %>%
+ ggtitle("Unemployment rate by age") %>%
+ scale_y_continuous(limits = c(0,30)) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ theme(legend.title = element_blank()) %>%
+ geom_line() %>%
+ xlab("") + ylab("Unemployment rate (%)")
ggplot(unem_race, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal(base_size = 18) %>%
+ ggtitle("Unemployment rate by race/ethnicity") %>%
+ scale_y_continuous(limits = c(0,22)) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ theme(legend.title = element_blank()) %>%
+ geom_line() %>%
+ xlab("") + ylab("Unemployment rate (%)")
ggplot(unem_sex, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal(base_size = 18) %>%
+ ggtitle("Unemployment rate by gender") %>%
+ theme(legend.title = element_blank()) %>%
+ scale_y_continuous(limits = c(0,13)) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ geom_line() %>%
+ xlab("") + ylab("Unemployment rate (%)")
ggplot(unem_rates, aes(x=time,y=value, color=series_id)) %>%
+ theme_minimal(base_size = 18) %>%
+ ggtitle("What is the true unemployment rate?") %>%
+ theme(legend.title = element_blank()) %>%
+ scale_x_continuous(breaks=c(1980,1985,1990,1995,2000,2005,2010,2015), limits = c(1980,2016)) %>%
+ geom_line() %>%
+ xlab("") + ylab("Rate (%)")
install.packages("gganimate")
install.packages("installR")
install.packages("installR")
install.packages("gganimate")
library(readr)
library(ggplot2)
library(gganimate)
library(scales)
library(dplyr)
# load data
nations <- read_csv("nations.csv")
setwd("~/Desktop/week14")
nations <- read_csv("nations.csv")
chart <- ggplot(nations, aes(x = gdp_percap, y = life_expect, frame = year)) +
xlab("GDP per capita") +
ylab("Life expectancy at birth") +
theme_minimal(base_size = 16, base_family = "Georgia") +
geom_point(aes(size = population, color = region), alpha = 0.7) +
scale_size_area(guide = FALSE, max_size = 20) +
scale_x_continuous(labels = dollar) +
scale_color_brewer(name = "", palette = "Set2") +
theme(legend.position=c(0.8,0.4))
gg_animate(chart)
gg_animate(chart, "output.gif", ani.width = 1000, ani.height = 1000)
gg_animate(chart, "output.mp4", ani.width = 900, ani.height = 450, interval = 0.1)
gg_animate(chart, "output.mp4", ani.width = 900, ani.height = 450, interval = 0.1)
warming <- read_csv("warming.csv")
pal <- c("#313695","#4575b4","#74add1","#abd9e9","#e0f3f8","#ffffbf","#fee090","#fdae61","#f46d43","#d73027","#a50026")
vals <- seq(-2, 2, length = 11)
plot <- ggplot(warming, aes(x = year, y = annual, frame = year, cumulative = TRUE)) +
geom_line(colour="black") +
geom_point(shape = 21, colour="black", aes(fill=annual), size=5, stroke=1) +
scale_x_continuous(limits=c(1880,2015)) +
scale_y_continuous(limits=c(-0.5,1)) +
theme_minimal() +
scale_fill_gradientn(colors = pal, values = vals, rescaler = function(x, ...) x, oob = identity, guide=FALSE) +
xlab("") +
ylab("Difference from 1951-1980 (ºC)") +
theme(text=element_text(size=16, family="Georgia"))
gg_animate(plot, interval = 0.1)
years = c(1880:2015)
for (y in years) {
tmp <- warming %>%
filter(year <= y)
plot <- ggplot(tmp, aes(x=year,y=annual)) %>%
+ geom_line(colour="black") %>%
+ geom_point(shape = 21, colour="black", aes(fill=annual), size=5, stroke=1) %>%
+ scale_x_continuous(limits=c(1880,2015)) %>%
+ scale_y_continuous(limits=c(-0.5,1)) %>%
+ theme_minimal() %>%
+ scale_fill_gradientn(colors = pal, values=vals, rescaler = function(x, ...) x, oob = identity, guide=FALSE) %>%
+ xlab("") %>%
+ ylab("Difference from 1951-1980 (ºC)") %>%
+ theme(text=element_text(size=16,family="Georgia"))
ggsave(file=paste0("charts/",y,".jpg"), plot=plot, width = 8, height = 4.5, units = "in", dpi=300)
print(paste0("processing: ",y))
}
for (y in years) {
system(paste0("convert charts/",y,".jpg maps/map",y,".jpg -geometry +305+72 -composite -pointsize 100 -font Georgia -annotate +2000+1120 ",y," combined/img",y,".jpg"))
print(paste0("processing: ",y))
}
system("convert -delay 10 combined/*.jpg nasa.gif")
nations_chart <- ggplot(nations, aes(x = gdp_percap, y = life_expect, frame = year)) +
xlab("GDP per capita") +
ylab("Life expectancy at birth") +
theme_minimal(base_size = 16, base_family = "Georgia") +
geom_point(aes(size = population, color = region), alpha = 0.7) +
scale_size_area(guide = FALSE, max_size = 20) +
scale_x_continuous(labels = dollar) +
scale_color_brewer(name = "", palette = "Set2") +
theme(legend.position=c(0.8,0.4))
gg_animate(nations_chart)
gg_animate(nations_chart, "nations.gif", ani.width = 1000, ani.height = 1000)
gg_animate(nations_chart, "nations.mp4", ani.width = 900, ani.height = 450, interval = 0.1)
warming_chart <- ggplot(warming, aes(x = year, y = annual, frame = year, cumulative = TRUE)) +
geom_line(colour="black") +
geom_point(shape = 21, colour="black", aes(fill=annual), size=5, stroke=1) +
scale_x_continuous(limits=c(1880,2015)) +
scale_y_continuous(limits=c(-0.5,1)) +
theme_minimal() +
scale_fill_gradientn(colors = pal, values = vals, rescaler = function(x, ...) x, oob = identity, guide=FALSE) +
xlab("") +
ylab("Difference from 1951-1980 (ºC)") +
theme(text=element_text(size=16, family="Georgia"))
gg_animate(warming_chart, "warming.gif", interval = 0.1)
gg_animate(warming_chart, "warming.mp4", ani.width = 900, ani.height = 450, interval = 0.1)
install.packages("devtools")
gg_animate(warming_chart, "warming.gif", ani.width = 900, ani.height = 450, interval = 0.1)
for (y in years) {
print(y)
}
for (y in years) {
print(y)
Sys.sleep(1)
}
library(tweenr)
for (y in years) {
print(paste0("The year is ",y," for this iteration of the loop"))
Sys.sleep(1)
}
for (y in years) {
tmp <- nations %>%
filter(year == y)
# assign(paste0("df",y), tmp)
df_list[[length(df_list)+1]] <- tmp
}
years <- c(1990:2014)
df_list <- c()
for (y in years) {
tmp <- nations %>%
filter(year == y)
df_list[[length(df_list)+1]] <- tmp
}
df_tween <- tween_states(df_list, tweenlength= 1, statelength=3, ease=rep('linear',51),nframes=300)
df_tween <- tween_states(df_list, tweenlength= 1, statelength=3, ease=rep('linear'),nframes=300)
for (y in years) {
tmp <- nations %>%
mutate(time = year) %>%
filter(time == y)
df_list[[length(df_list)+1]] <- tmp
}
df_tween <- tween_states(df_list, tweenlength= 1, statelength=3, ease=rep('linear'),nframes=300)
df_tween <- tween_states(df_list, tweenlength= 1, statelength=3, ease=rep('linear'), nframes=300)
df_list
nations <- nations %>%
mutate(id = c(1:5275),
time = year,
ease = "linear")
good.tween <- tween_elements(nations, 'time', 'id', 'ease', nframes = 500)
View(nations)
nations <- nations %>%
mutate(id = c(1:5275),
time = year,
ease = "linear") %>%
select(3:14)
good.tween <- tween_elements(nations, 'time', 'id', 'ease', nframes = 500)
good.tween <- tween_elements(nations, 'time', 'id', 'ease', color = NULL, nframes = 500)
good.tween <- tween_elements(nations, 'time', 'country', 'ease', nframes = 500)
nations <- nations %>%
mutate(id = c(1:5275),
time = year,
ease = "linear") %>%
select(3:14)
nations <- read_csv("nations.csv")
good.tween <- tween_elements(nations, 'time', 'country', 'ease', nframes = 500)
good.tween <- tween_elements(nations, 'year', 'country', 'linear', nframes = 500)
nations <- nations %>%
mutate(id = c(1:5275),
time = year,
ease = "linear") %>%
select(3:14)
good.tween <- tween_elements(nations, 'time', 'country', 'linear', nframes = 500)
good.tween <- tween_elements(nations, 'country', 'time', 'id', 'linear', nframes = 500)
good.tween <- tween_elements(nations, 'country', 'time', 'id', 'ease', nframes = 500)
good.tween <- tween_elements(nations, 'time', 'country', 'ease', nframes = 500)
library(ggforce)
d <- data.frame(x = rnorm(20), y = rnorm(20), time = sample(100, 20), alpha = 0,
size = 1, ease = 'elastic-out', id = 1:20,
stringsAsFactors = FALSE)
View(d)
d2 <- d
d2$time <- d$time + 10
d2$alpha <- 1
d2$size <- 3
d2$ease <- 'linear'
d3 <- d2
d3$time <- d2$time + sample(50:100, 20)
d3$size = 10
d3$ease <- 'bounce-out'
d4 <- d3
d4$y <- min(d$y) - 0.5
d4$size <- 2
d4$time <- d3$time + 10
d5 <- d4
d5$time <- max(d5$time)
df <- rbind(d, d2, d3, d4, d5)
View(df)
View(df)
dt <- tween_elements(df, 'time', 'id', 'ease', nframes = 500)
nations <- as.data.frame(nations)
df_tween <- tween_elements(df_list, 'time', 'id', 'ease', nframes = 500)
good.tween <- tween_elements(nations, 'time', 'id', 'ease', nframes = 500)
View(dt)
good.tween <- tween_elements(nations, 'time', 'id', 'ease', nframes = 500)
expand_data <- function(x) {
years <- min(nations$year):max(nations$year)
months <- 1:12
grid <- expand.grid(month=months, year=years)
nations$month <- 1
merged <- grid %>% left_join(nations, by=c('year', 'month'))
merged$life_expect <- nations$life_expect[1]
return(merged)
}
x <- 1:10
y <- rnorm(10)
par(mfrow = c(2,1))
plot(x, y, main = "approx(.) and approxfun(.)")
points(approx(x, y), col = 2, pch = "*")
points(approx(x, y, method = "constant"), col = 4, pch = "
f <- approxfun(x, y)
curve(f(x), 0, 10, col = "green")
points(x, y)
is.function(fc <- approxfun(x, y, method = "const")) # TRUE
curve(fc(x), 0, 10, col = "darkblue", add = TRUE)
install.packages('tweenr')
install.packages("tweenr")
