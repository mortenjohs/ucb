install.packages("tidyverse")
install.packages("rgdal")
install.packages("devtools")
install.packages("highcharter")
install.packages("leaflet")
install.packages("gganimate")
devtools::install_github("dgrtwo/gganimate")
install.packages("shiny")
install.packages("DT")
library(dplyr)
library(tidyr)
library(ggplot2)
setwd("/Volumes/Secomba/peteraldhous/Boxcryptor/Dropbox/buzzfeed_encrypted/stories/ongoing/peer survey")
peer <- read_csv("Threats_Violence_BLM_FWS.csv")
library(readr)
peer <- read_csv("Threats_Violence_BLM_FWS.csv")
View(peer)
peer <- read_csv("Threats_Violence_BLM_FWS.csv") %>%
gather(Agency, Number, -Year)
View(peer)
ggplot2(peer, aes(x=Year, y=Number, color=Agency)) + geom_line() + geom_point() +
theme_minimal()
library(ggplot2)
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line() + geom_point() +
theme_minimal()
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line() + geom_point() +
theme_minimal() +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank())
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3)
theme_minimal() +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3)
theme_minimal() +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank())
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
scale_color_manual(c("purple","green")) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
scale_color_manual(values=c("purple","green")) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
scale_color_manual(values=c("#1b9e77","#d95f02")) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
scale_color_manual(values=c("#008837","#7b3294")) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
scale_color_manual(values=c("#018571","#a6611a")) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
scale_color_manual(values=c("green","#a6611a")) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
scale_color_manual(values=c("green4","#a6611a")) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
scale_color_manual(values=c("green3","#a6611a")) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
scale_color_manual(values=c("#a6611a", "#018571")) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
ggplot(peer, aes(x=Year, y=Number, color=Agency)) + geom_line(size=1) + geom_point(size=3) +
scale_color_manual(values=c("#a6611a", "green3")) +
theme_minimal(base_size = 16, base_family = "Proxima Nova Semibold") +
theme(legend.position="top",
legend.title=element_blank()) +
ylab("Threats/Attacks") +
xlab("")
setwd("/Volumes/MyBook2/data2016")
names_planes <- c("aircraft_id","latitude","longitude","track","altitude","speed","squawk","radar_id","type","registration","last_update","origin","destination","flight","onground","vspeed","callsign","reserved","flight_id","adshex","squawk_hex","timestamp")
file_list <- list.files("csv_days")
file_list
file_list <- list.files("csv_days")[228:237]
file_list
airlines <- read_tsv("airlines.tsv") %>%
filter(IATA != "") %>%
mutate(IATA = substring(IATA,1,2))
View(airlines)
library(rvest)
url <- "https://en.wikipedia.org/wiki/List_of_airline_codes"
airlines <- url %>%
html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[1]') %>%
html_table()
airlines <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[1]') %>%
html_table()
airlines <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[1]') %>%
html_table()[[1]]
airlines <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[1]') %>%
html_table()
airlines
airlines <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[2]') %>%
html_table()
airlines <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[2]') %>%
html_table(fill=TRUE)
airlines
airlines <- airlines[[1]]
View(airlines)
airlines <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[2]') %>%
html_table(fill=TRUE)
airlines <- airlines[[1]][1:6]
View(airlines)
View(airlines)
View(airlines)
names(airlines) <- c("ICAO","IATA","callsign2","country","comments")
View(airlines)
url <- "https://en.wikipedia.org/wiki/List_of_airline_codes"
airlines <- url %>%
read_html() %>%
html_nodes(xpath='//*[@id="mw-content-text"]/table[2]') %>%
html_table(fill=TRUE)
airlines <- airlines[[1]][1:6]
View(airlines)
names(airlines) <- c("ICAO","IATA","airline","callsign2","country","comments")
View(airlines)
install.packages("rworldmap")
library(rworldmap)
world <- countriesCoarse()
world <- data(countriesCoarse)
worldmap
mapCountryData()
world <- mapCountryData()
world
world <- data(countriesCoarse)
library(rgdal)
coords_ny <- matrix(c(78.46801, 19.53407,
78.46801, 19.74557,
78.83157, 19.74557,
78.83157, 19.53407,
78.46801, 19.53407),
ncol = 2, byrow = TRUE)
poly_ny <- Polygon(coords_ny)
box_ny = SpatialPolygons(list(Polygons(list(poly_ny), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
plot(box_ny)
airports <- readOGR("ne_50m_airports", "ne_50m_airports")
airports$proj4string
detach(rgdal)
detach("rgdal")
library(dplyr)
library(readr)
library(rvest)
library(rgdal)
install.packages("rgdal")
library(rgdal)
detach("package:rgdal", unload=TRUE)
library(rgdal)
detach("package:rgdal", unload=TRUE)
library(rgdal)
load("/Volumes/MyBook2/data2016/planes_filtering_invest.RData")
library(dplyr)
library(readr)
library(rvest)
library(rgdal)
library(rgeos)
plot(nyc_buffer)
plot(nyc_depart, add=TRUE)
plot(nyc_depart)
plot(nyc_buffer, add=TRUE)
plot(nyc_buffer, add=TRUE, color=red)
plot(nyc_buffer, add=TRUE, color="red")
plot(nyc_buffer, add=TRUE, col="red")
plot(nyc_buffer, col="red", add=TRUE)
plot(nyc_depart, col="red")
plot(nyc_buffer, col="red")
plot(nyc_buffer, col="blue", add=TRUE)
plot(nyc_depart, col="red")
plot(nyc_buffer, col="blue", add=TRUE)
writeOGR(nyc_depart, "day", "day", driver="ESRI Shapefile" )
nyc_depart@data$flight_id <- as.character(nyc_depart@data$flight_id)
writeOGR(nyc_depart, "day", "day", driver="ESRI Shapefile" )
writeOGR(nyc_depart, "day", "day", driver="ESRI Shapefile" )
writeOGR(nyc_buffer, "nyc", "nyc", driver="ESRI Shapefile" )
plot(nyc_depart, col="red", axes=TRUE)
str(nyc_depart)
airports <- readOGR("ne_50m_airports", "ne_50m_airports")
airports@proj4string
day <- SpatialPointsDataFrame(coords = xy, data = day, proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
plot(nyc_buffer, col="blue", axes=TRUE)
airports <- spTransform(airports, CRS( "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs" ) )
airports@proj4string
nas_buffer <- spTransform(nas_buffer, CRS( "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0" ) )
a
nas_buffer@proj4string
nyc_buffer <- spTransform(nyc_buffer, CRS( "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0" ) )
nyc_buffer@proj4string
nyc_planes <- raster::intersect(nyc_buffer,day)
day <- as.data.frame(day)
day <- SpatialPointsDataFrame(coords = xy, data = day, proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
nyc_depart <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_from)),]
nyc_arrive <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_to)|grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$real_to)),]
nas_depart <- day [which(grepl("NAS", day@data$schd_from)),]
nas_arrive <- day [which(grepl("NAS", day@data$schd_to)|grepl("NAS", day@data$real_to)),]
save.image("/Volumes/MyBook2/data2016/planes_filtering_invest.RData")
nyc_planes <- raster::intersect(day,nyc_buffer)
plot(nyc_buffer, axes=TRUE)
plot(nyc_planes, col="red", add=TRUE)
plot(nyc_planes, axes=TRUE)
nyc_planes <- gIntersection(day, nyc_buffer, byid = TRUE, drop_lower_td = TRUE)
nyc_planes <- day[nyc_buffer, ]
nyc_planes <- day[nyc_buffer, ]
plot(nyc_planes, col="red", add=TRUE)
nyc_buffer@proj4string
nas_buffer@proj4string
n <- 0
n <- 0
for (file in file_list) {
day <- read_csv(paste0("csv_days/",file)) %>%
mutate(flight_id=as.hexmode(flight_id),
timestamp=as.character(as.POSIXct(snapshot_id, origin="1970-01-01", tz="UTC")),
vspeed="",
onground="")
print(paste0("processing file ",n," of ",length(file_list)))
day <- as.data.frame(day)
xy <- day[,c(16,15)]
day <- SpatialPointsDataFrame(coords = xy, data = day, proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
nyc_depart <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_from)),]
nyc_arrive <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_to)|grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$real_to)),]
nas_depart <- day [which(grepl("NAS", day@data$schd_from)),]
nas_arrive <- day [which(grepl("NAS", day@data$schd_to)|grepl("NAS", day@data$real_to)),]
nyc_planes <- day[nyc_buffer, ]
nas_planes <- day[nas_buffer, ]
nyc_depart <- as.data.frame(nyc_depart)
nyc_arrive <- as.data.frame(nyc_arrive)
nas_depart <- as.data.frame(nas_depart)
nas_arrive <- as.data.frame(nas_arrive)
nyc_planes <- as.data.frame(nyc_planes)
nas_planes <- as.data.frame(nas_planes)
write_csv(nyc_depart, paste0("output/",nyc_depart,".csv"), na="", append = TRUE)
write_csv(nyc_arrive, paste0("output/",nyc_arrive,".csv"), na="", append = TRUE)
write_csv(nas_depart, paste0("output/",nas_depart,".csv"), na="", append = TRUE)
write_csv(nas_arrive, paste0("output/",nas_arrive,".csv"), na="", append = TRUE)
write_csv(nyc_planes, paste0("output/",nyc_planes,".csv"), na="", append = TRUE)
write_csv(nas_planes, paste0("output/",nas_planes,".csv"), na="", append = TRUE)
}
write_csv(nyc_depart, paste0("output/",nyc_depart,".csv"), na="", append = TRUE)
write_csv(nyc_depart, "output/nyc_depart.csv", na="", append = TRUE)
nyc_onground <- bind_rows(nyc_depart,nyc_arrive)
nyc_onground <- nyc_onground[nyc_buffer, ]
nyc_onground <- nyc_onground[nyc_buffer, ]
nyc_depart <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_from)),]
nyc_arrive <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_to)|grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$real_to)),]
nas_depart <- day [which(grepl("NAS", day@data$schd_from)),]
nas_arrive <- day [which(grepl("NAS", day@data$schd_to)|grepl("NAS", day@data$real_to)),]
nyc_planes <- nyc_depart[nyc_buffer, ]
nyc_arrive <- nyc_arrive[nyc_buffer, ]
nyc_depart <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_from)),]
nyc_depart2 <- nyc_depart[nyc_buffer, ]
nyc_arrive <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_to)|grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$real_to)),]
nyc_arrive2 <- nyc_arrive[nyc_buffer, ]
nas_depart <- day [which(grepl("NAS", day@data$schd_from)),]
nas_arrive <- day [which(grepl("NAS", day@data$schd_to)|grepl("NAS", day@data$real_to)),]
nyc_planes <- day[nyc_buffer, ]
nas_planes <- day[nas_buffer, ]
nyc_depart <- as.data.frame(nyc_depart)
nyc_arrive <- as.data.frame(nyc_arrive)
nas_depart <- as.data.frame(nas_depart)
nas_arrive <- as.data.frame(nas_arrive)
nyc_planes <- as.data.frame(nyc_planes)
nas_planes <- as.data.frame(nas_planes)
nyc_depart2 <- as.data.frame(nyc_depart2)
nyc_arrive2 <- as.data.frame(nyc_arrive2)
nyc_onground <- bind_rows(nyc_depart2,nyc_arrive2)
nyc_planes <- anti_join(nyc_planes,nyc_onground)
n <- 0
for (file in file_list) {
day <- read_csv(paste0("csv_days/",file)) %>%
mutate(flight_id=as.hexmode(flight_id),
timestamp=as.character(as.POSIXct(snapshot_id, origin="1970-01-01", tz="UTC")),
vspeed="",
onground="")
print(paste0("processing file ",n," of ",length(file_list)))
day <- as.data.frame(day)
xy <- day[,c(16,15)]
day <- SpatialPointsDataFrame(coords = xy, data = day, proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
nyc_depart <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_from)),]
nyc_depart2 <- nyc_depart[nyc_buffer, ]
nyc_arrive <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_to)|grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$real_to)),]
nyc_arrive2 <- nyc_arrive[nyc_buffer, ]
nas_depart <- day [which(grepl("NAS", day@data$schd_from)),]
nas_arrive <- day [which(grepl("NAS", day@data$schd_to)|grepl("NAS", day@data$real_to)),]
nyc_planes <- day[nyc_buffer, ]
nas_planes <- day[nas_buffer, ]
nyc_depart <- as.data.frame(nyc_depart)
nyc_arrive <- as.data.frame(nyc_arrive)
nas_depart <- as.data.frame(nas_depart)
nas_arrive <- as.data.frame(nas_arrive)
nyc_planes <- as.data.frame(nyc_planes)
nas_planes <- as.data.frame(nas_planes)
nyc_depart2 <- as.data.frame(nyc_depart2)
nyc_arrive2 <- as.data.frame(nyc_arrive2)
nyc_onground <- bind_rows(nyc_depart2,nyc_arrive2)
nyc_planes <- anti_join(nyc_planes,nyc_onground)
write_csv(nyc_depart, "output/nyc_depart.csv", na="", append = TRUE)
write_csv(nyc_arrive, "output/nyc_arrive.csv", na="", append = TRUE)
write_csv(nas_depart, "output/nas_depart.csv", na="", append = TRUE)
write_csv(nas_arrive, "output/nas_arrive.csv", na="", append = TRUE)
write_csv(nyc_planes, "output/nyc_planes.csv", na="", append = TRUE)
write_csv(nas_planes, "output/nas_planes.csv", na="", append = TRUE)
}
n <- 1
for (file in file_list) {
day <- read_csv(paste0("csv_days/",file)) %>%
mutate(flight_id=as.hexmode(flight_id),
timestamp=as.character(as.POSIXct(snapshot_id, origin="1970-01-01", tz="UTC")),
vspeed="",
onground="")
print(paste0("processing file ",n," of ",length(file_list)))
day <- as.data.frame(day)
xy <- day[,c(16,15)]
day <- SpatialPointsDataFrame(coords = xy, data = day, proj4string = CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
nyc_depart <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_from)),]
nyc_arrive <- day [which(grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$schd_to)|grepl("JFK|EWR|LGA|ISP|SWF|TTN|HPN|TEB|HWV|FOK", day@data$real_to)),]
nas_depart <- day [which(grepl("NAS", day@data$schd_from)),]
nas_arrive <- day [which(grepl("NAS", day@data$schd_to)|grepl("NAS", day@data$real_to)),]
nyc_planes <- day[nyc_buffer, ]
nas_planes <- day[nas_buffer, ]
nyc_depart <- as.data.frame(nyc_depart)
nyc_arrive <- as.data.frame(nyc_arrive)
nas_depart <- as.data.frame(nas_depart)
nas_arrive <- as.data.frame(nas_arrive)
nyc_planes <- as.data.frame(nyc_planes)
nas_planes <- as.data.frame(nas_planes)
write_csv(nyc_depart, "output/nyc_depart.csv", na="", append = TRUE)
write_csv(nyc_arrive, "output/nyc_arrive.csv", na="", append = TRUE)
write_csv(nas_depart, "output/nas_depart.csv", na="", append = TRUE)
write_csv(nas_arrive, "output/nas_arrive.csv", na="", append = TRUE)
write_csv(nyc_planes, "output/nyc_planes.csv", na="", append = TRUE)
write_csv(nas_planes, "output/nas_planes.csv", na="", append = TRUE)
}
save.image("/Volumes/MyBook2/data2016/planes_filtering_invest.RData")
save.image("/Volumes/MyBook2/data2016/planes_filtering_invest.RData")
setwd("/Volumes/MyBook2/data2016")
library(WDI)
library(dplyr)
library(readr)
library(stringr)
indic_list <- c("NY.GDP.PCAP.PP.CD", "SP.DYN.LE00.IN", "SP.POP.TOTL", "SP.DYN.CBRT.IN","SH.DYN.NMRT")
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2014, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("\\(|\\)","", indicators$region)
indicators$region <- str_trim(indicators$region)
indicators$income <- gsub(": nonOECD","", indicators$income)
indicators$income <- gsub(": OECD","", indicators$income)
# write to csv
write_csv(indicators, "nations.csv", na="")
setwd("~/SpiderOak Hive/raw-data/week3")
write_csv(indicators, "nations.csv", na="")
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("\\(|\\)","", indicators$region)
indicators$region <- str_trim(indicators$region)
indicators$income <- gsub(": nonOECD","", indicators$income)
indicators$income <- gsub(": OECD","", indicators$income)
View(indicators)
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2016, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("\\(|\\)","", indicators$region)
indicators$region <- str_trim(indicators$region)
indicators$income <- gsub(": nonOECD","", indicators$income)
indicators$income <- gsub(": OECD","", indicators$income)
View(indicators)
indic_list <- c("NY.GDP.PCAP.PP.CD", "SP.DYN.LE00.IN", "SP.POP.TOTL", "SP.DYN.CBRT.IN","SH.DYN.NMRT")
# import indicators into single data frame and rename fields
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("\\(|\\)","", indicators$region)
indicators$region <- str_trim(indicators$region)
indicators$income <- gsub(": nonOECD","", indicators$income)
indicators$income <- gsub(": OECD","", indicators$income)
# write to csv
write_csv(indicators, "nations.csv", na="")
indic_list <- c("NY.GDP.PCAP.PP.CD", "SP.DYN.LE00.IN", "SP.POP.TOTL", "SP.DYN.CBRT.IN","SH.DYN.NMRT")
# import indicators into single data frame and rename fields
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("\\(|\\)","", indicators$region)
indicators$region <- str_trim(indicators$region)
indicators$income <- gsub(": nonOECD","", indicators$income)
indicators$income <- gsub(": OECD","", indicators$income)
# write to csv
write_csv(indicators, "nations.csv", na="")
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates")
# load required packages
library(WDI)
library(dplyr)
library(readr)
library(stringr)
indic_list <- c("NY.GDP.PCAP.PP.CD", "SP.DYN.LE00.IN", "SP.POP.TOTL", "SP.DYN.CBRT.IN","SH.DYN.NMRT")
# import indicators into single data frame and rename fields
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators <- indicators %>%
select(-life_expect)
View(indicators)
indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("\\(|\\)","", indicators$region)
indicators$region <- str_trim(indicators$region)
indicators$income <- gsub(": nonOECD","", indicators$income)
indicators$income <- gsub(": OECD","", indicators$income)
write_csv(indicators, "nations.csv", na="")
co2 <- WDI(indicator="EN.ATM.CO2E.PC", country="all", start=1990, end=2014, extra=F, cache=NULL)
View(co2)
co2 <- WDI(indicator="EN.ATM.CO2E.PC", country="all", start=1990, end=2014, extra=T, cache=NULL) %>%
filter(income != "Aggregates")
View(co2)
co2 <- WDI(indicator="EN.ATM.CO2E.PC", country="all", start=1990, end=2014, extra=T, cache=NULL) %>%
filter(income != "Aggregates") %>%
select(1:5)
write_csv(co2,"co2.csv", na="")
