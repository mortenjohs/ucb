library(dplyr)
library(Lahman)
library(ggplot2)
ggplot(mlb_salaries_2014, aes(x=salary_mil, y=..count..)) +
geom_histogram(binwidth=.5) +
ylab("Number of players") +
xlab("Salary ($ million)") +
theme_minimal()
# load required libraries
library(dplyr)
library(Lahman)
library(ggplot2)
# convert Lahman tables to local data frames, with data for 2013 only for Teams and Salaries
Teams <- filter(Teams, yearID >= 2014)
Salaries <- filter(Salaries, yearID >= 2014)
Fielding <- filter(Fielding, yearID >= 2014)
# calculate payrolls for each Team, by year
Payrolls <- group_by(Salaries, teamID, yearID) %>%
summarise(payroll=sum(salary)) %>%
mutate(payroll_mil=payroll/1000000)
# join Payrolls to Teams, then extract required fields, rounding payroll in $ million to 2 decimal places
mlb_payrolls_2014 <- inner_join(Teams, Payrolls, by=c("teamID", "yearID")) %>%
select(teamID, name, payroll_mil) %>%
mutate(payroll_mil = round(payroll_mil, digits=2)) %>%
rename(teamName=name)
# join to Master and Teams, select fields for export
mlb_salaries_2014 <- inner_join(Salaries, Master, by="playerID") %>%
inner_join(Teams, by="teamID") %>%
mutate(salary_mil=salary/1000000, nameFull=paste(nameFirst, nameLast, sep=" ")) %>%
rename(teamName=name) %>%
select(playerID, nameFirst, nameLast, nameFull, teamID, teamName, salary, salary_mil)
ggplot(mlb_salaries_2014, aes(x=salary_mil, y=..count..)) +
geom_histogram(binwidth=.5) +
ylab("Number of players") +
xlab("Salary ($ million)") +
theme_minimal()
ggplot(mlb_salaries_2014, aes(x=salary_mil, y=..count..)) +
geom_histogram(binwidth=.5, fill="red") +
ylab("Number of players") +
xlab("Salary ($ million)") +
theme_minimal()
ggplot(mlb_salaries_2014, aes(x=salary_mil, y=..count..)) +
geom_histogram(binwidth=.5, fill="red", color="black", alpha = 0.5) +
ylab("Number of players") +
xlab("Salary ($ million)") +
theme_minimal()
ggplot(mlb_salaries_2014, aes(x=salary_mil, y=..count..)) +
geom_histogram(binwidth=.5, fill="red", color="black", alpha = 0.5) +
ylab("Number of players") +
xlab("Salary ($ million)") +
theme_minimal() +
ggtitle("Salaries in Major League Baseball (2014")
ggplot(mlb_salaries_2014, aes(x=salary_mil, y=..count..)) +
geom_histogram(binwidth=.5, fill="red", color="black", alpha = 0.5) +
ylab("Number of players") +
xlab("Salary ($ million)") +
theme_minimal() +
ggtitle("Salaries in Major League Baseball (2014)")
ggplot(mlb_salaries_2014, aes(x=salary_mil, y=..count..)) +
geom_histogram(binwidth=.5, fill="red", color="black", alpha = 0.5) +
ylab("Number of players") +
xlab("Salary ($ million)") +
theme_minimal(base_size = 18) +
ggtitle("Salaries in Major League Baseball (2014)")
library(WDI)
library(dplyr)
library(readr)
indic_list <- c("NY.GDP.PCAP.PP.CD", "SP.DYN.LE00.IN", "SP.POP.TOTL", "SP.DYN.CBRT.IN","SH.DYN.NMRT")
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal=SH.DYN.NMRT, iso_a2=iso2c)
View(indicators)
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal=SH.DYN.NMRT)
View(indicators)
indicators <- indicators %>%
filter(income != "Aggregates")
View(indicators)
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
View(indicators)
indicators$region <- gsub("(all income levels)","",indicators$region)
View(indicators)
# import indicators into single data frame and rename fields
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
View(indicators)
indicators$region <- gsub(" (all income levels)","",indicators$region)
View(indicators)
indicators$region <- gsub(" ("indicators$region <- gsub(" (all income levels)", "" , indicators$region)","",indicators$region)
View(indicators)
indicators$region <- gsub(" ("indicators$region <- gsub(" /(all income levels/)", "" , indicators$region)","",indicators$region)
indicators$region <- gsub(" ("indicators$region <- gsub("all income levels", "" , indicators$region)","",indicators$region)
indicators$region <- gsub(" ("indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("all income levels","", indicators$region)
View(indicators)
indicators$region <- gsub(" ()","", indicators$region)
View(indicators)
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators$region <- gsub(" \(all income levels\)","", indicators$region)
indicators$region <- gsub("all income levels","", indicators$region)
View(indicators)
indicators$region <- gsub("\(","", indicators$region)
indicators$region <- gsub("(","", indicators$region)
indicators$region <- gsub("\(","", indicators$region)
indicators$region <- gsub("[:punct:]","", indicators$region)
View(indicators)
indicators$region <- gsub("[:punct:]","", indicators$region)
View(indicators)
indicators$income <- gsub(": nonOECD","", indicators$iincome)
indicators$income <- gsub(": nonOECD","", indicators$income)
View(indicators)
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators$income <- gsub(": nonOECD","", indicators$income)
View(indicators)
indicators$region <- gsub(" (all income levels)","", indicators$region)
View(indicators)
indicators$region <- gsub("all income levels","", indicators$region)
View(indicators)
indicators$region <- gsub("\(","", indicators$region)
indicators$region <- gsub(\"(","", indicators$region)
indicators$region <- gsub("\\(|\\)","", indicators$region)
View(indicators)
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2015, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("\\(|\\)","", indicators$region)
indicators$income <- gsub(": nonOECD","", indicators$income)
# write to csv
write_csv(indicators, "nations.csv", na="")
View(indicators)
# load required packages
library(WDI)
library(dplyr)
library(readr)
# get data
# create list of indicators to be imported
indic_list <- c("NY.GDP.PCAP.PP.CD", "SP.DYN.LE00.IN", "SP.POP.TOTL", "SP.DYN.CBRT.IN","SH.DYN.NMRT")
# import indicators into single data frame and rename fields
indicators <- WDI(indicator=indic_list, country="all", start=1990, end=2014, extra=T, cache=NULL) %>%
rename(gdp_percap=NY.GDP.PCAP.PP.CD, life_expect=SP.DYN.LE00.IN, population=SP.POP.TOTL, birth_rate=SP.DYN.CBRT.IN, neonat_mortal_rate=SH.DYN.NMRT) %>%
filter(income != "Aggregates") %>%
select(1,9,2:8,10,14)
indicators$region <- gsub("all income levels","", indicators$region)
indicators$region <- gsub("\\(|\\)","", indicators$region)
indicators$income <- gsub(": nonOECD","", indicators$income)
# write to csv
write_csv(indicators, "nations.csv", na="")
library(stringr)
indicators$region <- str_trim(indicators$region)
write_csv(indicators, "nations.csv", na="")
setwd("~/Dropbox/ucb/2016/dataviz/raw-data/week3")
write_csv(indicators, "nations.csv", na="")
