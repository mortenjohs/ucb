group_by(bigram,party,type,congress) %>%
count() %>%
ungroup() %>%
mutate(type = case_when(type == "rep" ~ "House",
TRUE ~ "Senate"))
for (p in c("Democrat","Republican")) {
for (c in c("old","new")) {
for (t in c("Senate","House")) {
tmp <- members_bigrams %>%
filter(party == p & type == t & congress == c)
png(paste0("wordclouds/bigrams_",p,"_",c,"_",t,".png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(p=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
}
}
members_words <- words[[1]] %>%
group_by(word,party,type,congress) %>%
anti_join(stop_words) %>%
count() %>%
ungroup() %>%
mutate(type = case_when(type == "rep" ~ "House",
TRUE ~ "Senate"))
for (p in c("Democrat","Republican")) {
for (c in c("old","new")) {
for (t in c("Senate","House")) {
tmp <- members_words %>%
filter(party == p & type == t & congress == c)
png(paste0("wordclouds/words_",p,"_",c,"_",t,".png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(p=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
}
}
members_bigrams <- bigrams[[1]] %>%
group_by(bigram,party,type,congress) %>%
count() %>%
ungroup() %>%
mutate(type = case_when(type == "rep" ~ "House",
TRUE ~ "Senate"))
for (p in c("Democrat","Republican")) {
for (c in c("old","new")) {
for (t in c("Senate","House")) {
tmp <- members_bigrams %>%
filter(party == p & type == t & congress == c)
png(paste0("wordclouds/bigrams_",p,"_",c,"_",t,".png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(p=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
}
}
aoc_words <- words[[2]] %>%
group_by(congress) %>%
anti_join(stop_words) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- aoc_words %>%
filter(congress == c)
png(paste0("wordclouds/words_",c,"_@AOC.png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = dem_pal)
dev.off()
aoc_words <- words[[2]] %>%
group_by(congress) %>%
anti_join(stop_words) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- aoc_words %>%
filter(congress == c)
png(paste0("wordclouds/words_",c,"_@AOC.png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = dem_pal))
dev.off()
}
View(aoc_words)
aoc_words <- words[[2]] %>%
group_by(word,congress) %>%
anti_join(stop_words) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- aoc_words %>%
filter(congress == c)
png(paste0("wordclouds/words_",c,"_@AOC.png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = dem_pal))
dev.off()
}
aoc_bigrams <- bigrams[[2]] %>%
group_by(bigram,congress) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- aoc_bigrams %>%
filter(congress == c)
png(paste0("wordclouds/bigrams_",c,"_@AOC.png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = dem_pal))
dev.off()
}
aoc_words <- words[[2]] %>%
group_by(word,congress) %>%
#anti_join(stop_words) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- aoc_words %>%
filter(congress == c)
png(paste0("wordclouds/words_",c,"_@AOC.png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = dem_pal))
dev.off()
}
aoc_bigrams <- bigrams[[2]] %>%
group_by(bigram,congress) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- aoc_bigrams %>%
filter(congress == c)
png(paste0("wordclouds/bigrams_",c,"_@AOC.png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = dem_pal))
dev.off()
}
aoc_words <- words[[2]] %>%
group_by(word,congress) %>%
anti_join(stop_words) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- aoc_words %>%
filter(congress == c)
png(paste0("wordclouds/words_",c,"_@AOC.png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = dem_pal))
dev.off()
}
aoc_bigrams <- bigrams[[2]] %>%
group_by(bigram,congress) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- aoc_bigrams %>%
filter(congress == c)
png(paste0("wordclouds/bigrams_",c,"_@AOC.png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = dem_pal))
dev.off()
}
trump_words <- words[[4]] %>%
group_by(word, congress) %>%
anti_join(stop_words) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- trump_words %>%
filter(congress == c)
png(paste0("wordclouds/words_",c,"_trump.png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = trump_pal))
dev.off()
}
trump_bigrams <- bigrams[[4]] %>%
group_by(bigram,congress) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- trump_bigrams %>%
filter(congress == c)
png(paste0("wordclouds/bigrams_",c,"_tru,[.png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = trump_pal))
dev.off()
}
trump_words <- words[[4]] %>%
group_by(word, congress) %>%
anti_join(stop_words) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- trump_words %>%
filter(congress == c)
png(paste0("wordclouds/words_",c,"_trump.png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = trump_pal))
dev.off()
}
trump_bigrams <- bigrams[[4]] %>%
group_by(bigram,congress) %>%
count() %>%
ungroup()
for (c in c("old","new")) {
tmp <- trump_bigrams %>%
filter(congress == c)
png(paste0("wordclouds/bigrams_",c,"_trump.png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = trump_pal))
dev.off()
}
candidates_words <- words[[3]] %>%
group_by(screen_name, party, word) %>%
anti_join(stop_words) %>%
count() %>%
ungroup()
for (s in unique(candidates_words$screen_name)) {
for (p in c("Democrat","Replublican")) {
tmp <- candidates_words %>%
filter(screen_name == s & party == p)
png(paste0("wordclouds/words_",s,"_",p,".png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(p=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
}
candidates_bigrams <- bigrams[[3]] %>%
group_by(screen_name, party, bigram) %>%
count() %>%
ungroup()
for (s in unique(candidates_words$screen_name)) {
for (p in c("Democrat","Replublican")) {
tmp <- candidates_words %>%
filter(screen_name == s & party == p)
png(paste0("wordclouds/words_",s,"_",p,".png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(p=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
}
candidates_words <- words[[3]] %>%
group_by(screen_name, party, word) %>%
anti_join(stop_words) %>%
count() %>%
ungroup()
for (s in unique(candidates_words$screen_name)) {
tmp <- candidates_words %>%
filter(screen_name == s)
png(paste0("wordclouds/words_",s,".png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(p=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
candidates_bigrams <- bigrams[[3]] %>%
group_by(screen_name, party, bigram) %>%
count() %>%
ungroup()
for (s in unique(candidates_words$screen_name)) {
tmp <- candidates_words %>%
filter(screen_name == s & party == p)
png(paste0("wordclouds/words_",s,".png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(p=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
candidates_words <- words[[3]] %>%
group_by(screen_name, party, word) %>%
anti_join(stop_words) %>%
count() %>%
ungroup()
for (s in unique(candidates_words$screen_name)) {
tmp <- candidates_words %>%
filter(screen_name == s)
png(paste0("wordclouds/words_",s,".png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(p=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
candidates_bigrams <- bigrams[[3]] %>%
group_by(screen_name, party, bigram) %>%
count() %>%
ungroup()
for (s in unique(candidates_bigrams$screen_name)) {
tmp <- candidates_words %>%
filter(screen_name == s)
png(paste0("wordclouds/bigrams_",s,".png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(p=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
candidates_words <- words[[3]] %>%
group_by(screen_name, party, word) %>%
anti_join(stop_words) %>%
count() %>%
ungroup()
for (s in unique(candidates_words$screen_name)) {
tmp <- candidates_words %>%
filter(screen_name == s)
png(paste0("wordclouds/words_",s,".png"), width=750,height=750)
try(wordcloud(tmp$word,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(tmp$party[1]=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
candidates_bigrams <- bigrams[[3]] %>%
group_by(screen_name, party, bigram) %>%
count() %>%
ungroup()
for (s in unique(candidates_bigrams$screen_name)) {
tmp <- candidates_words %>%
filter(screen_name == s)
png(paste0("wordclouds/bigrams_",s,".png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(tmp$party[1]=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
for (s in unique(candidates_bigrams$screen_name)) {
tmp <- candidates_bigrams %>%
filter(screen_name == s)
png(paste0("wordclouds/bigrams_",s,".png"), width=750,height=750)
try(wordcloud(tmp$bigram,
tmp$n,
family = "BasierSquare-SemiBold",
max.words = 50,random.order = FALSE,
colors = case_when(tmp$party[1]=="Democrat" ~ dem_pal,
TRUE ~ rep_pal)))
dev.off()
}
text <- c("S","financial")
text <- c("$","financial","other")
test <- filter(grepl("$|funding|financ", text, ignore.case = TRUE))
test <- grepl("$|funding|financ", text, ignore.case = TRUE)
text <- tibble(text = c("$","financial","other"))
library(dplyr)
text <- tibble(text = c("$","financial","other"))
test <- text %>%
filter(grepl("$|funding|financ", text, ignore.case = TRUE))
View(text)
test <- text %>%
filter(grepl("$|funding|financ", text, ignore.case = TRUE))
View(test)
test <- text %>%
filter(grepl("$", text, ignore.case = TRUE))
test <- text %>%
filter(grepl("financ", text, ignore.case = TRUE))
View(test)
test <- text %>%
filter(grepl("//$|financ", text, ignore.case = TRUE))
test <- text %>%
filter(grepl("/$|financ", text, ignore.case = TRUE))
text <- tibble(text = c("$","financial","other"))
test <- text %>%
filter(str_detect(tolower(text), pattern = "$|financ"))
library(stringr)
test <- text %>%
filter(str_detect(tolower(text), pattern = "$|financ"))
test <- text %>%
filter(str_detect(tolower(text), pattern = "/$|financ"))
View(test)
test <- text %>%
filter(str_detect(tolower(text), pattern = "//$|financ"))
test <- text %>%
filter(str_detect(tolower(text), pattern = "[$]|financ"))
View(test)
library(readr)
library(dplyr)
library(tidyr)
setwd("~/Dropbox/ucb/2018/dataviz/raw-data/week3+6")
gcp <- read_csv("gcp_co2.csv")
View(gcp)
gcp <- read_delim("gcp_co2.text", skip=1, delim = ";")
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";")
View(gcp)
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
mutate(year = X1) %>%
gather(country,emissions,-year)
View(gcp)
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
mutate(year = X1) %>%
gather(country,emissions)
View(gcp)
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
mutate(year = X1)
View(gcp)
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
mutate(year = X1) %>%
gather(country,emissions,-year)
View(gcp)
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
gather(country,emissions,-X1)
View(gcp)
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
gather(country,emissions,-X1) %>%
mutate(uear = X1)
View(gcp)
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
gather(country,emissions,-X1) %>%
rename(year = X1)
View(gcp)
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
gather(country,emissions,-X1) %>%
rename(year = X1) %>%
filter("Sources|Territorial",year)
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
gather(country,emissions,-X1) %>%
rename(year = X1) %>%
filter(!grepl("Sources|Territorial",year))
View(gcp)
library(countrycode)
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
gather(country,emissions,-X1) %>%
rename(year = X1) %>%
filter(!grepl("Sources|Territorial",year)) %>%
mutate(isoc3 = countrycode(country))
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
gather(country,emissions,-X1) %>%
rename(year = X1) %>%
filter(!grepl("Sources|Territorial",year)) %>%
mutate(isoc3 = countrycode("country"))
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
gather(country,emissions,-X1) %>%
rename(year = X1) %>%
filter(!grepl("Sources|Territorial",year)) %>%
mutate(isoc3 = countrycode(country, origin = "country", destination = "isoc3"))
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
gather(country,emissions,-X1) %>%
rename(year = X1) %>%
filter(!grepl("Sources|Territorial",year)) %>%
mutate(isoc3 = countrycode(country, origin = "country.name", destination = "isoc3"))
View(gcp)
countrycode(gcp$country, "country.name", destination = "isoc3")
countrycode(gcp$country, "country.name", destination = "iso3c")
gcp <- read_delim("gcp_co2.txt", skip=1, delim = ";") %>%
gather(country,emissions,-X1) %>%
rename(year = X1) %>%
filter(!grepl("Sources|Territorial",year)) %>%
mutate(isoc3 = countrycode(gcp$country, "country.name", destination = "iso3c"))
View(gcp)
write_csv(gcp, "co2.csv", na="")
